
    
    <link  media="none" onload="if(media!='all')media='all'" href="<?=base_url() ?>Assets/css/bootstrap.min.css" rel="stylesheet">
  <script defer src="<?=base_url() ?>Assets/js/bootstrap.bundle.min.js"></script>
  <link  media="none" onload="if(media!='all')media='all'" href="<?=base_url() ?>Assets/css/semantic.min.css" rel="stylesheet">
  
 

     
<style>
    

    #myModal .modal-body ol li{
    line-height:27px;
  }
  
.fileicon {
    border: 1px solid #e5e5e5;
    border-radius: 5px;
    display: block;
    padding: 5px;
    transition: border 300ms ease;
    cursor: pointer;
    text-align: center;
    margin: 0;
    background: white;
    padding: 7px;
}
.fileicon:hover{
    border: 1px solid #e5e5e5!important;
    background: white;
}
.fileicon i {
    display: block;
    font-size: 17px;
    padding-bottom: 5px;
}
.fileicon i,
.fileicon .title ,.title1 ,.title2 ,.title3{
    color: #5c5959;
  transition: 200ms color;
  font-size:13px;
}
.fileicon:hover {
  border: 1px solid var(--common-color);
}
.fileicon:hover i,
.fileicon:hover .title {
  color: var(--common-color);
}
#FileInput,#FileInput1,#FileInput2,#FileInput3{
    display:none;
}
.site-button{
    position: relative;
    z-index: 1;
    overflow: hidden;
    vertical-align: middle;
    font-family: "roboto";
    background:#2e55fa;
    color: #fff;
    padding: 10px 20px;
    display: inline-block;
    outline: none;
    cursor: pointer;
    outline: none;
    border-width: 0;
    border-style: solid;
    border-color: transparent;
    line-height: 1.42857;
    border-radius: 3px;
    font-weight: 400;
    text-align: center;
    text-decoration:none!important;
   
}
.modal-backdrop{
    background:black!important;
}
a{
    text-decoration:none!important;

}
a:hover{color:white!important;}
.site-button:hover{ color:white!important;}

ol li{
    font-size:17px;
}
.deskcard{
    margin-top: -19px; 
    }
    .deskrow{ margin-top:-20px;}
@media(min-width:767px){
    .deskcard{
        margin-top: 0px;
    }
    .deskrow{ margin-top:0px;}
}

@media(min-width:992px){
    .ptts{
        padding-top:32px!important;
    }
}
</style>


    <!-- Begin page content -->
    <main class="container-fluid h-100">
        <div class="row h-100">
          
                 <div class="col-12 col-sm-10 deskcard col-md-12 col-lg-11 col-xl-11 mx-auto align-self-center py-4 browse-section" style="">

             <form id="Form"   method="post" enctype="multipart/form-data">
                        
             <div class="container-fluid px-2 py-2">   
             
             <div class="main-heading bids_heading">
							<h2>Create Firm Profile</h2>
							<div class="line-shape1 d-lg-none">
								<img src="<?=base_url() ?>Assets/img/line.svg" alt="">
							</div>
						</div>
 
                    
                    <div class="row">
                    <div class="col-12 col-lg-2 col-sm-6 col-md-6">
                                            <label for="phone">Register Mobile Number</label>
                                            <input class="form-control" id="mobileNo" type="number" maxlength="10" onKeyPress="if(this.value.length==10) return false;"  name="mobileNo"/>
                                        </div>
                                        
                                        

</div>

<br>
                                    <div class="row">
                                    <div class="col-md-12 text-left">
                                    <div class="col-md-12 text-left">
        <button type="button" class="btn btn-warning text-white" id="search" name="search">Search</button>
    </div>

                                        </div> 
                                    </div>
                                    <!-- <div class="row mb-3">
        <div class="col-md-12">
            <label for="searchInput">Search:</label>
            <input type="text" id="searchInput" class="form-control" placeholder="Search table...">
        </div>
    </div> -->
    <br><br>
    <div id="fileInputWrapper" class="col-md-2 form-group mb-3" style="display:none;">
    <label for="fileUpload">Choose File:</label>
    <input class="form-control" type="file" id="fileUpload" name="fileUpload">
    </div>
    <div id="fileInputWrapper1" class="col-md-2 form-group mb-3" style="display:none;">
    <label for="fileUpload">Choose File:</label>
    <input class="form-control" type="file" id="fileUpload" name="fileUpload">
    </div>
    <div id="fileInputWrapper2" class="col-md-2 form-group mb-3" style="display:none;">
    <label for="fileUpload">Choose File:</label>
    <input class="form-control" type="file" id="fileUpload" name="fileUpload">
    </div>
    <div id="fileInputWrapper3" class="col-md-2 form-group mb-3" style="display:none;">
    <label for="fileUpload">Choose File:</label>
    <input class="form-control" type="file" id="fileUpload" name="fileUpload">
    </div>

    <a  href="<?=base_url("Login") ?>"> <p class="bottomclick"><i class="fas fa-reply"></i> &nbsp;Back to Login</p></a>

                                </form>
                                <br><br>
                            <!-- <button class="btn btn-new mb-3" ><a href="<?=base_url() ?>Uploaddata/create" class="text-decoration-none text-white "><i class="fa-solid fa-plus"></i>&nbsp;Add New</a></button><br> -->
                            
                             
                            </div>
                        </div>
                    </div>
                    
</div>
               

        </div>


        
             <!-- The Modal -->
<div class="modal fade" id="myModal">
  <div class="modal-dialog modal-dialog-centered 
modal-dialog-scrollable">
    <div class="modal-content" style="border-radius:13px">

      <!-- Modal Header -->
      <div class="modal-header py-0 d-flex justify-content-center align-items-center">
        <h4 class="modal-title mt-0">Terms & Conditions</h4>
        <img src="<?=base_url() ?>Assets/img/jainNewlogo.png" class="ms-5 my-2 p-0" height="50px" width="50px">
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>

      <!-- Modal body -->
      <div class="modal-body px-1">
        <ol>
        <?php
         foreach($rule as $key => $value){
            echo'<li>'.$value->businessRule.'</li>';
         }
        ?>
        </ol>
        <div class="col-11 col-sm-11 mt-auto mx-auto py-4">
                <div class="row ">
                    <div class="col-8 mx-auto d-grid">
                    <a data-bs-dismiss="modal" type="button"  id="accept" class="site-button">Accept</a>

                    </div>
                </div>
            </div>
      </div>

   
</div>
</div>
</div>
</div>
    </div>
  </div>

    </main>


    <script    src="<?php echo base_url('web_resources');?>/dist/js/jquery.min.js"></script>
<script   src="<?php echo base_url('web_resources');?>Assets/js/RegistrationCreate.js"></script>


<script defer src="<?=base_url() ?>Assets/js/sw.js"></script>
<script  src="<?=base_url() ?>Assets/css/semantic.min.js"></script>

<!-- ************************ Razorpay Payment getway***************** -->
<script defer src="https://checkout.razorpay.com/v1/checkout.js"></script>






<!-- <script>
$(document).ready(function() {
    // Initialize DataTables
    var table = $('#example').DataTable();
    
    // Event listener for search input
    $('#searchInput').on('keyup', function() {
        table.search(this.value).draw();
    });
});
</script> -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function() {
        $('#search').click(function() {
            var mobileNo = $('#mobileNo').val();

            // Validate the mobile number length (must be 10 digits)
            if (mobileNo.length !== 10) {
                Swal.fire('Error', 'Please enter a valid 10-digit mobile number.', 'error');
                return;
            }

            // Send the mobile number to the controller for validation
            $.ajax({
                url: '<?= base_url("CompanyRegistration/check_mobile") ?>', // Make sure this URL is correct
                method: 'POST',
                data: { mobileNo: mobileNo },
                success: function(response) {
                    var data = JSON.parse(response);

                    // If the mobile number is not found in the table
                    if (data.status === 'not_registered') {
                        Swal.fire('Error', 'Not registered mobile number.', 'error');
                    }
                    // If mobile number exists and navId is 1 (verified)
                    else if (data.status === 'verify') {
                        Swal.fire('Success', 'Register number is verified.', 'success');
                    }
                    // If mobile number exists but navId is not 1 (not verified)
                    else if (data.status === 'not_verified') {
                        // Show the not verified alert
                        Swal.fire({
                            title: 'Register number is not verified',
                            text: 'Please upload your documents to verify your number.',
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            // Show the file input when "OK" is clicked
                            if (result.isConfirmed) {
                                $('#fileInputWrapper').show(); // Show the file input
                                $('#fileInputWrapper1').show();
                                $('#fileInputWrapper2').show();
                                $('#fileInputWrapper3').show();
                            }
                        });
                    }
                }
            });
        });
    });
</script>


<script>

// For mobile no check
$(document).ready(function(){
         $('#accept').click(function(){

            // alert("hwllo");
            document.getElementById("termcondition").checked = true;
         })
});

$(document).ready(function(){
         $('#mobileNo').change(function(){
       //alert('aaa')
      var mobileNo=$(this).val();
      var toastMixin = Swal.mixin({
      toast: true,
      icon: 'success',
      title: 'General Title',
      animation: false,
      position: 'center',
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.addEventListener('mouseenter', Swal.stopTimer)
        toast.addEventListener('mouseleave', Swal.resumeTimer)
      }
    });
      
      if ( $.trim($('#mobileNo').val()) != '') {
        // alert(userName)
       $.ajax({
                        url:base_path+'CompanyRegistration/checkuserexist',
                       method: 'post',
                        data: {mobileNo: mobileNo},
                        // dataType:'json',
                        success: function(data){
                            // console.log(data);
                              
              if(data==1)
            {
              $('#mobileNo').val('');

              toastMixin.fire({
                title: 'Mobile No already exists.',
                icon: 'error'
            });

            }

                        }
                    });
      }
    });
})

function onemail(){
var email=$('#email').val();

// alert(email);
var expr = /^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;

if(email==""||!expr.test(email)||email==null){
// alert('email empty');
$("#error_email").html(" Please enter a  valid email ID!");

}
else{
  $("#error_email").html(" ");
}
}

async function validateadhar() {
    var aadharCard = $('#FileInput')[0].files[0];
    var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];

    var toastMixin = Swal.mixin({
        toast: true,
        icon: 'success',
        title: 'General Title',
        animation: false,
        position: 'center',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    if (!aadharCard) {
        toastMixin.fire({
            title: 'Please select an Aadhaar card image.',
            icon: 'error'
        });
        return;
    }

    if (allowedTypes.indexOf(aadharCard.type) === -1) {
        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG files are allowed.',
            icon: 'error'
        });
        return;
    }

    try {
        
        let resizedFile = await resizeAndCompressImage(aadharCard);
        
        let dt = new DataTransfer();
        dt.items.add(resizedFile);
        $("#FileInput")[0].files = dt.files;

        // toastMixin.fire({
        //     title: 'Image successfully resized and compressed!',
        //     icon: 'success'
        // });

    } catch (error) {
        console.error("Image is too Large Please Select from Gallery:", error);
        
           var labelVal = $(".title").text();
           
        $('#FileInput').val(''); 
        $(".filelabel i, .filelabel .title").css({ 'color': 'red' });
        $(".filelabel").css({ 'border': '1px solid red' });
        $(".filelabel .title").text("Aadhaar Card");
        
        toastMixin.fire({
            title: 'Image is too Large Please Select from Gallery.',
            icon: 'error'
        });
    }
}  

function resizeAndCompressImage(file, maxSizeKB = 50, maxWidth = 800, maxHeight = 800) {
    return new Promise((resolve, reject) => {
        if (!file || !file.type.startsWith("image/")) {
            reject("Invalid file type");
            return;
        }

        let reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function (e) {
            let img = new Image();
            img.src = e.target.result;
            img.onload = async function () {
                let canvas = document.createElement("canvas");
                let ctx = canvas.getContext("2d");

                let width = img.width;
                let height = img.height;

                
                if (width > maxWidth || height > maxHeight) {
                    let scale = Math.min(maxWidth / width, maxHeight / height);
                    width *= scale;
                    height *= scale;
                }

                canvas.width = width;
                canvas.height = height;
                ctx.drawImage(img, 0, 0, width, height);

                
                async function compressImage(quality) {
                    return new Promise((resolve) => {
                        canvas.toBlob(
                            (blob) => {
                                if (blob.size <= maxSizeKB * 1024 || quality < 0.1) {
                                    resolve(blob);
                                } else {
                                    resolve(compressImage(quality - 0.05));
                                }
                            },
                            "image/jpeg",
                            quality
                        );
                    });
                }

                let compressedBlob = await compressImage(0.9); 
                let newFile = new File([compressedBlob], file.name, {
                    type: "image/jpeg",
                    lastModified: Date.now(),
                });

                resolve(newFile);
            };
        };

        reader.onerror = function () {
            reject("Error reading file");
        };
    });
}

async function validatepan(){
   
    
    
    
    var panCard = $('#FileInput1')[0].files[0];
    var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];

    var toastMixin = Swal.mixin({
        toast: true,
        icon: 'success',
        title: 'General Title',
        animation: false,
        position: 'center',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    if (!panCard) {
        toastMixin.fire({
            title: 'Please select an PanCard image.',
            icon: 'error'
        });
        return;
    }

    if (allowedTypes.indexOf(panCard.type) === -1) {
        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG files are allowed.',
            icon: 'error'
        });
        return;
    }

    try {
        
        let resizedFile = await resizeAndCompressImage(panCard);
        
        let dt = new DataTransfer();
        dt.items.add(resizedFile);
        $("#FileInput1")[0].files = dt.files;

        // toastMixin.fire({
        //     title: 'Image successfully resized and compressed!',
        //     icon: 'success'
        // });

    } catch (error) {
        console.error("Image is too Large Please Select from Gallery:", error);
        
         var labelVal = $(".title1").text();
        $('#FileInput1').val(''); 
        $(".filelabel1 i, .filelabel1 .title1").css({ 'color': 'red' });
        $(".filelabel1").css({ 'border': '1px solid red' });
        $(".filelabel1 .title1").text("Pan Card");


        toastMixin.fire({
            title: 'Image is too Large Please Select from Gallery.',
            icon: 'error'
        });
    }
}

async function validategst(){
    
    var gstcertificate = $('#FileInput2')[0].files[0];
    var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];

    var toastMixin = Swal.mixin({
        toast: true,
        icon: 'success',
        title: 'General Title',
        animation: false,
        position: 'center',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    if (!gstcertificate) {
        toastMixin.fire({
            title: 'Please select an Gst Certificate image.',
            icon: 'error'
        });
        return;
    }

    if (allowedTypes.indexOf(gstcertificate.type) === -1) {
        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG files are allowed.',
            icon: 'error'
        });
        return;
    }

    try {
        
        let resizedFile = await resizeAndCompressImage(gstcertificate);
        
        let dt = new DataTransfer();
        dt.items.add(resizedFile);
        $("#FileInput2")[0].files = dt.files;

        // toastMixin.fire({
        //     title: 'Image successfully resized and compressed!',
        //     icon: 'success'
        // });

    } catch (error) {
        console.error("Image is too Large Please Select from Gallery:", error);
        
         var labelVal = $(".title2").text();
        $('#FileInput2').val(''); 
        $(".filelabel2 i, .filelabel2 .title2").css({ 'color': 'red' });
        $(".filelabel2").css({ 'border': '1px solid red' });
        $(".filelabel2 .title2").text("GST Certificate");
        toastMixin.fire({
            title: 'Image is too Large Please Select from Gallery.',
            icon: 'error'
        });
    }
}


async function validateudyog(){
    
    
    var udyog = $('#FileInput3')[0].files[0];
    var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];

    var toastMixin = Swal.mixin({
        toast: true,
        icon: 'success',
        title: 'General Title',
        animation: false,
        position: 'center',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    if (!udyog) {
        toastMixin.fire({
            title: 'Please select an Udyog image.',
            icon: 'error'
        });
        return;
    }

    if (allowedTypes.indexOf(udyog.type) === -1) {
        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG files are allowed.',
            icon: 'error'
        });
        return;
    }

    try {
        
        let resizedFile = await resizeAndCompressImage(udyog);
        
        let dt = new DataTransfer();
        dt.items.add(resizedFile);
        $("#FileInput3")[0].files = dt.files;

        // toastMixin.fire({
        //     title: 'Image successfully resized and compressed!',
        //     icon: 'success'
        // });

    } catch (error) {
        console.error("Image is too Large Please Select from Gallery:", error);
              var labelVal = $(".title3").text();
        $('#FileInput3').val(''); 
        $(".filelabel3 i, .filelabel3 .title3").css({ 'color': 'red' });
        $(".filelabel3").css({ 'border': '1px solid red' });
        $(".filelabel3 .title3").text("Udyog Aadhar");
        toastMixin.fire({
            title: 'Image is too Large Please Select from Gallery.',
            icon: 'error'
        });
    }
}


function compressImage(file) {
    var reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = function(event) {
        var img = new Image();
        img.src = event.target.result;
        img.onload = function() {
            var canvas = document.createElement('canvas');
            var ctx = canvas.getContext('2d');
            
            var maxWidth = 500;
            var maxHeight = 500;
            var width = img.width;
            var height = img.height;

            if (width > height) {
                if (width > maxWidth) {
                    height *= maxWidth / width;
                    width = maxWidth;
                }
            } else {
                if (height > maxHeight) {
                    width *= maxHeight / height;
                    height = maxHeight;
                }
            }

            canvas.width = width;
            canvas.height = height;
            ctx.drawImage(img, 0, 0, width, height);

            canvas.toBlob(function(blob) {
                console.log("Original Size: ", file.size / 1024, "KB");
                console.log("Compressed Size: ", blob.size / 1024, "KB");
                
              
            }, "image/jpeg", 0.3); // 30% quality
        };
    };
}














    $('.ui.dropdown')
  .dropdown()
;

$('.ui.checkbox')
  .checkbox()
;

document.getElementById('birthdate').valueAsDate = new Date();

</script>


<script>
 
 $('#loadershow').hide();
    // For adharcard

    $("#FileInput").on('change', function (e) {


        var toastMixin = Swal.mixin({
            toast: true,
            animation: false,
            position: 'center',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });




    $('#loadershow').show();
    setTimeout(() => { $('#loadershow').hide(); }, 1000);

    var labelVal = $(".title").text();
    var oldfileName = $(this).val();
    var fileName = e.target.value.split('\\').pop();
    var extension = fileName.split('.').pop().toLowerCase();

    const allowedExtensions = ['jpg', 'jpeg', 'png'];

    if (oldfileName === fileName) return false;

    if (allowedExtensions.includes(extension)) {
        $(".filelabel i, .filelabel .title").css({ 'color': '#2d53fe' });
        $(".filelabel").css({ 'border': '1px solid #2d53fe' });

        // File name show
        if (fileName.length > 10) {
            $(".filelabel .title").text(fileName.slice(0, 4) + '...' + extension);
        } else {
            $(".filelabel .title").text(fileName);
        }
    } else {
        $('#FileInput').val(''); 
        $(".filelabel i, .filelabel .title").css({ 'color': 'red' });
        $(".filelabel").css({ 'border': '1px solid red' });
        $(".filelabel .title").text(labelVal);

      

        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG  files are allowed.',
            icon: 'error'
        });
    }
});




    


        // for pan card
        $("#FileInput1").on('change',function (e) {

            var toastMixin = Swal.mixin({
            toast: true,
            animation: false,
            position: 'center',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });





        $('#loadershow').show();
    setTimeout(() => { $('#loadershow').hide(); }, 1000);

    var labelVal = $(".title1").text();
    var oldfileName = $(this).val();
    var fileName = e.target.value.split('\\').pop();
    var extension = fileName.split('.').pop().toLowerCase();

    const allowedExtensions = ['jpg', 'jpeg', 'png'];

    if (oldfileName === fileName) return false;

    if (allowedExtensions.includes(extension)) {
        $(".filelabel1 i, .filelabel1 .title1").css({ 'color': '#2d53fe' });
        $(".filelabel1").css({ 'border': '1px solid #2d53fe' });

        // File name show
        if (fileName.length > 10) {
            $(".filelabel1 .title1").text(fileName.slice(0, 4) + '...' + extension);
        } else {
            $(".filelabel1 .title1").text(fileName);
        }
    } else {
        $('#FileInput').val(''); // <-- important: clear input
        $(".filelabel1 i, .filelabel1 .title1").css({ 'color': 'red' });
        $(".filelabel1").css({ 'border': '1px solid red' });
        $(".filelabel1 .title1").text(labelVal);

      

        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG  files are allowed.',
            icon: 'error'
        });
    }
});








        // For Gst Certificate
         $("#FileInput2").on('change',function (e) {
       


        var toastMixin = Swal.mixin({
            toast: true,
            animation: false,
            position: 'center',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });





        $('#loadershow').show();
    setTimeout(() => { $('#loadershow').hide(); }, 1000);

    var labelVal = $(".title2").text();
    var oldfileName = $(this).val();
    var fileName = e.target.value.split('\\').pop();
    var extension = fileName.split('.').pop().toLowerCase();

    const allowedExtensions = ['jpg', 'jpeg', 'png'];

    if (oldfileName === fileName) return false;

    if (allowedExtensions.includes(extension)) {
        $(".filelabel2 i, .filelabel2 .title2").css({ 'color': '#2d53fe' });
        $(".filelabel2").css({ 'border': '1px solid #2d53fe' });

        // File name show
        if (fileName.length > 10) {
            $(".filelabel2 .title2").text(fileName.slice(0, 4) + '...' + extension);
        } else {
            $(".filelabel2 .title2").text(fileName);
        }
    } else {
        $('#FileInput').val(''); // <-- important: clear input
        $(".filelabel2 i, .filelabel2 .title2").css({ 'color': 'red' });
        $(".filelabel2").css({ 'border': '1px solid red' });
        $(".filelabel2 .title2").text(labelVal);

      

        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG  files are allowed.',
            icon: 'error'
        });
    }
});







        // For MSME Certificate
        $("#FileInput3").on('change',function (e) {



            var toastMixin = Swal.mixin({
            toast: true,
            animation: false,
            position: 'center',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });





        $('#loadershow').show();
    setTimeout(() => { $('#loadershow').hide(); }, 1000);

    var labelVal = $(".title3").text();
    var oldfileName = $(this).val();
    var fileName = e.target.value.split('\\').pop();
    var extension = fileName.split('.').pop().toLowerCase();

    const allowedExtensions = ['jpg', 'jpeg', 'png'];

    if (oldfileName === fileName) return false;

    if (allowedExtensions.includes(extension)) {
        $(".filelabel3 i, .filelabel3 .title3").css({ 'color': '#2d53fe' });
        $(".filelabel3").css({ 'border': '1px solid #2d53fe' });

        // File name show
        if (fileName.length > 10) {
            $(".filelabel3 .title3").text(fileName.slice(0, 4) + '...' + extension);
        } else {
            $(".filelabel3 .title3").text(fileName);
        }
    } else {
        $('#FileInput').val(''); // <-- important: clear input
        $(".filelabel3 i, .filelabel3 .title3").css({ 'color': 'red' });
        $(".filelabel3").css({ 'border': '1px solid red' });
        $(".filelabel3 .title3").text(labelVal);

      

        toastMixin.fire({
            title: 'Only JPG, JPEG, PNG  files are allowed.',
            icon: 'error'
        });
    }
});












    //         $('#loadershow').show();

    //    setTimeout(() => {$('#loadershow').hide();}, "1000");

    //         var labelVal = $(".title3").text();
    //         var oldfileName = $(this).val();
    //             fileName = e.target.value.split( '\\' ).pop();

    //             if (oldfileName == fileName) {return false;}
    //             var extension = fileName.split('.').pop();

    //         if ($.inArray(extension,['jpg','jpeg','png']) >= 0) {
    //             setTimeout(() => {$('#loadershow').hide();}, "1000");
    //             $(".filelabel3 i, .filelabel3 .title3").css({'color':'#2d53fe'});
    //             $(".filelabel3").css({'border':' 1px solid #2d53fe'});
    //         }
    //         else if(extension == 'pdf'){
    //             setTimeout(() => {$('#loadershow').hide();}, "1000");
    //             $(".filelabel3 i, .filelabel3 .title3").css({'color':'#2d53fe'});
    //             $(".filelabel3").css({'border':' 2px solid #2d53fe'});

    //         }
    //         else if(extension !== 'jpg' || extension !== 'jpeg' || extension !== 'png' || extension !== 'pdf'){
    //              setTimeout(() => {$('#loadershow').hide();}, "1000");


    //             $(".filelabel3 i, .filelabel3 .title3").css({'color':'red'});
    //             $(".filelabel3").css({'border':' 1px solid red'});
    //         }
    //         else{
              
    //             $(".filelabel3 i, .filelabel3 .title3").css({'color':'black'});
    //             $(".filelabel3").css({'border':' 1px solid black'});
    //         }

    //         if(fileName ){
    //             if (fileName.length > 10){
    //                 $(".filelabel3 .title3").text(fileName.slice(0,4)+'...'+extension);
    //             }
    //             else{
    //                 $(".filelabel3 .title3").text(fileName);
    //             }
    //         }
    //         else{
    //             $(".filelabel3 .title3").text(labelVal);
    //         }
    //     });
</script>            


<script>
$(document).ready(function() {
    $('#p2').hide();
   

  $('#semantic-dropdown').dropdown();

  $('#semantic-dropdown').on('change', function() {

var bt = $('#firmType').val();
// alert( bt);



if(bt==1){
    $('#p2').hide('slow');

}
else if(bt==2 || bt==3 ||bt==4||bt==5 || bt==6){
    $('#p2').show('slow');
   
}


});
});





 $(document).ready(function(){
    $.ajax({
        url: "CompanyRegistration/getcategory", 
        type: "GET",
        dataType: "json",
        success: function(response) {
            if(response.length > 0){
                let dropdownMenu = $("#firmcat");
                dropdownMenu.empty(); 

                $.each(response, function(index, item){
                    let option = '<div class="item" data-value="' + item.businessId + '">' + item.businessName + '</div>';
                    dropdownMenu.append(option);
                });
            }
        },
        error: function(error) {
            console.log("Error fetching data: ", error);
        }
    });




    $.ajax({
        url: "CompanyRegistration/getbusinesstype", 
        type: "GET",
        dataType: "json",
        success: function(response) {
            if(response.length > 0){
                let dropdownMenu = $("#businesstype");
                dropdownMenu.empty(); 

                $.each(response, function(index, item){
                    let option = '<div class="item" data-value="' + item.businesstypeId + '">' + item.businesstypeName + '</div>';
                    dropdownMenu.append(option);
                });
            }
        },
        error: function(error) {
            console.log("Error fetching data: ", error);
        }
    });


    $.ajax({
        url: "CompanyRegistration/getbloodgroup", 
        type: "GET",
        dataType: "json",
        success: function(response) {
            if(response.length > 0){
                let dropdownMenu = $("#bloodgroups");
                dropdownMenu.empty(); 

                $.each(response, function(index, item){
                    let option = '<div class="item" data-value="' + item.bgroupId + '">' + item.bloodgroup + '</div>';
                    dropdownMenu.append(option);
                });
            }
        },
        error: function(error) {
            console.log("Error fetching data: ", error);
        }
    });

});





</script>



                      

            

</body>



</html>


 